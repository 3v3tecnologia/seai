version: '3'
services:
  database:
      image: postgis/postgis:15-3.3-alpine
      container_name: "seai-database-dev"
      volumes:
        - ./db/ddl/equipments.sql:/docker-entrypoint-initdb.d/ddl-equipments.sql
        - ./db/ddl/government.sql:/docker-entrypoint-initdb.d/ddl-government.sql
        - ./db/ddl/management.sql:/docker-entrypoint-initdb.d/ddl-management.sql
        - ./db/ddl/newsletter.sql:/docker-entrypoint-initdb.d/ddl-newsletter.sql
        - ./db/ddl/logs.sql:/docker-entrypoint-initdb.d/ddl-logs.sql
        - ./db/ddl/census.sql:/docker-entrypoint-initdb.d/ddl-census.sql
        - ./db/seeds/equipments.sql:/docker-entrypoint-initdb.d/seeds-equipments.sql
        - ./db/seeds/government.sql:/docker-entrypoint-initdb.d/seeds-government.sql
        - ./db/seeds/logs.sql:/docker-entrypoint-initdb.d/seeds-logs.sql
        - ./db-data:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
        interval: 30s
        timeout: 60s
        retries: 5
        start_period: 80s  
      env_file:
        - env_file
      restart: always
      networks:
        - custom
        - private
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: "seai-server"
    restart: always
    ports:
      - "80:8080"
    volumes:
      - .:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - custom
      - private
volumes:
  db-data: {}
  backend_node_modules: {}

secrets:
  db-password:
    file: db/password.txt
    
networks:
  private:
  custom:
    name: jobs
    driver: bridge
