version: '3'
services:
  database:
      image: postgis/postgis:15-3.3-alpine
      container_name: "seai-database-dev"
      volumes:
        - ./db/ddl/equipments.sql:/docker-entrypoint-initdb.d/ddl-equipments.sql
        - ./db/ddl/government.sql:/docker-entrypoint-initdb.d/ddl-government.sql
        - ./db/ddl/management.sql:/docker-entrypoint-initdb.d/ddl-management.sql
        - ./db/ddl/newsletter.sql:/docker-entrypoint-initdb.d/ddl-newsletter.sql
        - ./db/ddl/logs.sql:/docker-entrypoint-initdb.d/ddl-logs.sql
        - ./db/ddl/census.sql:/docker-entrypoint-initdb.d/ddl-census.sql
        - ./db/seeds/equipments.sql:/docker-entrypoint-initdb.d/seeds-equipments.sql
        - ./db/seeds/government.sql:/docker-entrypoint-initdb.d/seeds-government.sql
        - ./db/seeds/logs.sql:/docker-entrypoint-initdb.d/seeds-logs.sql
        - ./db-data:/var/lib/postgresql/data
        - ./db/csv/Bacias.csv:/var/lib/postgres/data/Bacias.csv
        - ./db/csv/Municipios.csv:/var/lib/postgres/data/Municipios.csv
        - ./db/csv/Contatos.csv:/var/lib/postgres/data/Contatos.csv
        - ./db/csv/EmpresasPocos.csv:/var/lib/postgres/data/EmpresasPocos.csv
        - ./db/csv/Pocos.csv:/var/lib/postgres/data/Pocos.csv
        - ./db/csv/Cadastro.csv:/var/lib/postgres/data/Cadastro.csv
        - ./db/csv/PessoaJuridica.csv:/var/lib/postgres/data/PessoaJuridica.csv
        - ./db/csv/PessoaFisica.csv:/var/lib/postgres/data/PessoaFisica.csv
        - ./db/csv/CaptacaoMedia.csv:/var/lib/postgres/data/CaptacaoMedia.csv
        - ./db/csv/RecursoHidrico.csv:/var/lib/postgres/data/RecursoHidrico.csv
        - ./db/csv/Superficial.csv:/var/lib/postgres/data/Superficial.csv
        - ./db/csv/Subterranea.csv:/var/lib/postgres/data/Subterranea.csv
        - ./db/csv/Usos.csv:/var/lib/postgres/data/Usos.csv
        - ./db/csv/Animais.csv:/var/lib/postgres/data/Animais.csv
        - ./db/csv/Irrigacao.csv:/var/lib/postgres/data/Irrigacao.csv
        - ./db/csv/Saneamento.csv:/var/lib/postgres/data/Saneamento.csv
        - ./db/csv/CulturasIrrigadas.csv:/var/lib/postgres/data/CulturasIrrigadas.csv
        - ./db/csv/Aquiculturas.csv:/var/lib/postgres/data/Aquiculturas.csv
        - ./db/csv/Industria.csv:/var/lib/postgres/data/Industria.csv
        - ./db/csv/ConsumoHumano.csv:/var/lib/postgres/data/ConsumoHumano.csv
        - ./db/csv/Mineracao.csv:/var/lib/postgres/data/Mineracao.csv
        - ./db/csv/DestinosEspeciais.csv:/var/lib/postgres/data/DestinosEspeciais.csv
        - ./db/csv/ControleAmbiental.csv:/var/lib/postgres/data/ControleAmbiental.csv
        - ./db/csv/DiluicaoEfluentes.csv:/var/lib/postgres/data/DiluicaoEfluentes.csv
        - ./db/csv/Militar.csv:/var/lib/postgres/data/Militar.csv
        - ./db/csv/RHManejados.csv:/var/lib/postgres/data/RHManejados.csv
        - ./db/csv/Termelétrica.csv:/var/lib/postgres/data/Termelétrica.csv
        - ./db/csv/LavagemVeiculos.csv:/var/lib/postgres/data/LavagemVeiculos.csv
        - ./db/csv/Bombas.csv:/var/lib/postgres/data/Bombas.csv
        - ./db/csv/TesteVazao.csv:/var/lib/postgres/data/TesteVazao.csv
        - ./db/csv/TesteBombeamento.csv:/var/lib/postgres/data/TesteBombeamento.csv
        - ./db/csv/Hidroquimica.csv:/var/lib/postgres/data/Hidroquimica.csv
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
        interval: 30s
        timeout: 60s
        retries: 5
        start_period: 80s  
      env_file:
        - env_file
      restart: always
      networks:
        - custom
        - private
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: "seai-server"
    restart: always
    ports:
      - "80:8080"
    volumes:
      - ./backend:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - private
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: "seai-client"
    restart: always
    ports:
      - "8081:8080"
    volumes:
      - ./frontend:/usr/src/app
      - frontend_node_modules:/usr/src/app/node_modules
    networks:
      - private
volumes:
  db-data: {}
  backend_node_modules: {}
  frontend_node_modules: {}

secrets:
  db-password:
    file: db/password.txt
    
networks:
  private:
  custom:
    name: jobs
    driver: bridge
